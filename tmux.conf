################## COLORS ##################
# Colors: https://i.stack.imgur.com/e63et.png
tm_color_active=colour208
tm_color_inactive=colour241
tm_color_neutral=colour255

# Automatically renumber tmux windows
set-option -g renumber-windows on

# prompt for session name when creating a new session, possible values are:
#   - true
#   - false (default)
tmux_conf_new_session_prompt=false

#Make tmux use zsh as default
set-option -g default-shell /bin/zsh


unbind C-b
set -g prefix C-a

# avoid confirmation prompts ---** New 2019/01
bind-key & kill-window
bind-key x kill-pane

bind c new-window      -c "#{pane_current_path}"
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"

# Lots taken from https://gist.github.com/spicycode/1229612
# Pane resizing
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

bind l select-pane -R
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Alt-n/p to switch windows
bind -n M-p  previous-window
bind -n M-n next-window

#Activity Monitoring
setw -g monitor-activity on
set -g visual-activity on

#Highlight the current window

set-window-option -g window-status-current-bg yellow

#Pane Switching using the mouse
set -g mouse on

source-file "${HOME}/.tmux-themepack/powerline/block/blue.tmuxtheme"
#set -g @themepack 'powerline/block/green'

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display "Config Reloaded!"

# Rename your terminals
set -g set-titles on
set -g set-titles-string '#(marco)::#h::#(curl ipecho.net/plain;echo)'
# window status
setw -g window-status-format " #F#I:#W#F "
setw -g window-status-current-format " #F#I:#W#F "
setw -g window-status-format "#[fg=magenta]#[bg=black] #I #[bg=colour233]#[fg=colour8]#W"
setw -g window-status-current-format "#[fg=colour235]#[bg=colour233]#[fg=colour235]#[bg=colour230] #I #[fg=colour236]#[bg=colour235] #[fg=colour236]#[bg=colour38]#W #[fg=colour236]#[bg=colour238]#[fg=colour238]#[bg=colour233] "
setw -g window-status-current-bg colour0
setw -g window-status-current-fg colour11
setw -g window-status-current-attr dim
setw -g window-status-bg green
setw -g window-status-fg black
setw -g window-status-attr reverse

# Highlight active window
set-window-option -g window-status-current-bg colour124

#Nvim special
#set -g -a terminal-overrides ',*:Ss=\[E%p1%d q:Se=[2 q'

set -g default-terminal "screen-256color"
#set-option -gw utf8 on
set-option -gw xterm-keys on

#The Panes:
set -g pane-border-bg colour58
set -g pane-border-fg colour233
set -g pane-active-border-bg colour236
set -g pane-active-border-fg colour51

# The messages

set -g message-attr bold
set -g message-fg colour232
set -g message-bg colour166

#first script
bind E source-file ~/.tmux/env

#set escape time
set -g escape-time 1

setw -g mode-keys vi

# C-c: save into system clipboard (+). With preselection.
bind C-c choose-buffer "run \"tmux save-buffer -b %% - | xclip -i -sel clipboard\" \; run \" tmux display \\\"Clipboard \(+\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
# C-v: copy from + clipboard.
bind C-v run "tmux set-buffer \"$(xclip -o -sel clipboard)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(+\) $(xclip -o -sel clipboard | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""

# C-d: save into selection clipboard (*). With preselection.
bind C-d choose-buffer "run \"tmux save-buffer -b %% - | xclip -i\" \; run \" tmux display \\\"Clipboard \(*\) filled with: $(tmux save-buffer -b %1 - | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \\\" \" "
# C-f: copy from * clipboard.
bind C-f run "tmux set-buffer \"$(xclip -o)\"; tmux paste-buffer" \; run "tmux display \"Copied from \(*\) $(xclip -o | dd ibs=1 obs=1 status=noxfer count=80 2> /dev/null)... \""

unbind p
bind p run "xclip -o -sel clipboard | tmux load-buffer- ; tmux paste-buffer"
bind P  paste-buffer

bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-selection
bind-key -Tcopy-mode-vi 'r' send -X rectangle-toggle

bind -Tcopy-mode-vi M-y send -X copy-pipe "xclip -i -sel p -f | xclip -i -sel c" \; display-message "copied to system clipboard"

######### Tmux Resurrect ############

# for vim
 set -g @resurrect-strategy-vim 'session'
# # for neovim
 set -g @resurrect-strategy-nvim 'session'
# Restore pane contents
#set -g @resurrect-capture-pane-contents 'on'
set -g @resurrect-processes 'ranger mc mysql'

set -g @resurrect-save 'S'
set -g @resurrect-restore 'R'



# Smart pane switching with awareness of Vim splits.

# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"


#{{powerline conf--old{{{
#run-shell "powerline-daemon -q"
#source source "~/.local/lib/python2.7/site-packages/powerline/bindings/tmux/powerline.conf"
#source ~/.vim/bundle/powerline/powerline/bindings/tmux/powerline.conf

#set-option -g status on
#set -g status-bg colour235
#set-option -g status-interval 5
#set-option -g status-justify "centre"
#set-option -g status-left-length 90
#set-option -g status-right-length 90
#set-option -g status-left "#(~/.tmux/tmux-powerline/powerline.sh left)"
#set-option -g status-right "#(~/.tmux/tmux-powerline/powerline.sh right)"
#powerline conf--old }}}}}

set-option -g default-terminal "screen-256color"

# List of plugins{{{
#set -g @plugin 'tpm_plugins'
#set -g @plugin 'tmux-plugins/tpm'
#set -g @plugin 'tmux-plugins/tmux-yank'
#set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'tmux-plugins/tmux-copycat'
#set -g @plugin 'tmux-plugins/tmux-open'
#set -g @plugin 'tmux-plugins/tmux-resurrect'
#set -g @plugin 'tmux-plugins/tmux-sensible'
#set -g @plugin 'jimeh/tmux-themepack'


# Other examples:
#  'github_username/plugin_name'
#  'git@github.com/user/plugin'
#  'git@bitbucket.com/user/plugin'
# }}}

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'jimeh/tmux-themepack'
set -g @plugin 'tmux-plugins/tmux-open'
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
